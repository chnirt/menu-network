{"version":3,"file":"static/js/102.59c6b36f.chunk.js","mappings":"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","sources":["../node_modules/.pnpm/nanoid@4.0.2/node_modules/nanoid/index.browser.js","mocks/index.tsx","screens/NewCategory/index.tsx"],"sourcesContent":["export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { nanoid } from \"nanoid\";\nimport { IS_DEVELOP } from \"../constants\";\n\nexport const MASTER_MOCK_DATA = {\n  LOGIN: {\n    email: IS_DEVELOP ? \"chnirt@gmail.com\" : \"\",\n    password: IS_DEVELOP ? \"Admin@123\" : \"\",\n  },\n  REGISTER: {\n    fullName: IS_DEVELOP ? \"Chnirt Chnirt\" : \"\",\n    email: IS_DEVELOP ? \"chnirt@gmail.com\" : \"\",\n    username: IS_DEVELOP ? \"chnirt\" : \"\",\n    password: IS_DEVELOP ? \"Admin@123\" : \"\",\n    confirmPassword: IS_DEVELOP ? \"Admin@123\" : \"\",\n  },\n  NEW_CATEGORY: {\n    categoryName: IS_DEVELOP ? \"Cocktail\" : \"\",\n  },\n  NEW_DISH: {\n    dishName: IS_DEVELOP ? \"Phatty’S Nachos\" : \"\",\n    price: IS_DEVELOP ? 99000 : 0,\n    dishFiles: []\n  },\n};\n\nexport const SAMPLE_DATA = {\n  reply: {\n    menu_infos: [\n      {\n        dish_type_id: nanoid(),\n        dish_type_name: \"Coffee\",\n        dishes: [\n          {\n            price: {\n              text: \"99,000đ\",\n            },\n            photos: [\n              {\n                value: \"https://wjhjnr.csb.app/milk-coffee.jpeg\",\n              },\n            ],\n            id: nanoid(),\n            name: \"Milk Coffee\",\n          },\n          {\n            price: {\n              text: \"99,000đ\",\n            },\n            photos: [\n              {\n                value: \"https://wjhjnr.csb.app/black-coffee.jpeg\",\n              },\n            ],\n            id: nanoid(),\n            name: \"Black Coffee\",\n          },\n          {\n            price: {\n              text: \"99,000đ\",\n            },\n            photos: [\n              {\n                value: \"https://wjhjnr.csb.app/latte.jpeg\",\n              },\n            ],\n            id: nanoid(),\n            name: \"Latte\",\n          },\n        ],\n      },\n      {\n        dish_type_id: nanoid(),\n        dish_type_name: \"Tea\",\n        dishes: [\n          {\n            price: {\n              text: \"99,000đ\",\n            },\n            photos: [\n              {\n                value:\n                  \"https://wjhjnr.csb.app/peach-orange-lemongrass-tea.jpeg\",\n              },\n            ],\n            id: nanoid(),\n            name: \"Trà đào cam sả\",\n          },\n          {\n            price: {\n              text: \"99,000đ\",\n            },\n            photos: [\n              {\n                value: \"https://wjhjnr.csb.app/lychee-oolong-tea.jpeg\",\n              },\n            ],\n            id: nanoid(),\n            name: \"Trà vải\",\n          },\n          {\n            price: {\n              text: \"99,000đ\",\n            },\n            photos: [\n              {\n                value: \"https://wjhjnr.csb.app/passion-fruit-tea.jpeg\",\n              },\n            ],\n            id: nanoid(),\n            name: \"Trà chanh dây\",\n          },\n          {\n            price: {\n              text: \"99,000đ\",\n            },\n            photos: [\n              {\n                value: \"https://wjhjnr.csb.app/kumquat-tea.jpeg\",\n              },\n            ],\n            id: nanoid(),\n            name: \"Trà tắc\",\n          },\n          {\n            price: {\n              text: \"99,000đ\",\n            },\n            photos: [\n              {\n                value: \"https://wjhjnr.csb.app/sugar-tea.jpeg\",\n              },\n            ],\n            id: nanoid(),\n            name: \"Trà đường\",\n          },\n        ],\n      },\n      {\n        dish_type_id: nanoid(),\n        dish_type_name: \"Fruit\",\n        dishes: [\n          {\n            price: {\n              text: \"99,000đ\",\n            },\n            photos: [\n              {\n                value: \"https://wjhjnr.csb.app/orange-juice.jpeg\",\n              },\n            ],\n            id: nanoid(),\n            name: \"Cam\",\n          },\n          {\n            price: {\n              text: \"99,000đ\",\n            },\n            photos: [\n              {\n                value: \"https://wjhjnr.csb.app/guava-juice.jpeg\",\n              },\n            ],\n            id: nanoid(),\n            name: \"Ổi\",\n          },\n          {\n            price: {\n              text: \"99,000đ\",\n            },\n            photos: [\n              {\n                value: \"https://wjhjnr.csb.app/milk-coffee.jpeg\",\n              },\n            ],\n            id: nanoid(),\n            name: \"Cà Cải\",\n          },\n          {\n            price: {\n              text: \"99,000đ\",\n            },\n            photos: [\n              {\n                value: \"https://wjhjnr.csb.app/water-melon.jpeg\",\n              },\n            ],\n            id: nanoid(),\n            name: \"Dưa hấu\",\n          },\n          {\n            price: {\n              text: \"99,000đ\",\n            },\n            photos: [\n              {\n                value: \"https://wjhjnr.csb.app/wax-gourd.jpeg\",\n              },\n            ],\n            id: nanoid(),\n            name: \"Bí đao\",\n          },\n        ],\n      },\n      {\n        dish_type_id: nanoid(),\n        dish_type_name: \"Yogurt\",\n        dishes: [\n          {\n            price: {\n              text: \"99,000đ\",\n            },\n            photos: [\n              {\n                value: \"https://wjhjnr.csb.app/sour-milk.jpeg\",\n              },\n            ],\n            id: nanoid(),\n            name: \"Sour Milk\",\n          },\n        ],\n      },\n      {\n        dish_type_id: nanoid(),\n        dish_type_name: \"Soft Drink\",\n        dishes: [\n          {\n            price: {\n              text: \"99,000đ\",\n            },\n            photos: [\n              {\n                value: \"https://wjhjnr.csb.app/coke.jpg\",\n              },\n            ],\n            id: nanoid(),\n            name: \"Coke\",\n          },\n          {\n            price: {\n              text: \"99,000đ\",\n            },\n            photos: [\n              {\n                value: \"https://wjhjnr.csb.app/diet-coke.jpg\",\n              },\n            ],\n            id: nanoid(),\n            name: \"Diet Coke\",\n          },\n          {\n            price: {\n              text: \"99,000đ\",\n            },\n            photos: [\n              {\n                value: \"https://wjhjnr.csb.app/sprite.jpg\",\n              },\n            ],\n            id: nanoid(),\n            name: \"Sprite\",\n          },\n          {\n            price: {\n              text: \"99,000đ\",\n            },\n            photos: [\n              {\n                value: \"https://wjhjnr.csb.app/fanta.jpg\",\n              },\n            ],\n            id: nanoid(),\n            name: \"Fanta\",\n          },\n          {\n            price: {\n              text: \"99,000đ\",\n            },\n            photos: [\n              {\n                value: \"https://wjhjnr.csb.app/red-bull.jpeg\",\n              },\n            ],\n            id: nanoid(),\n            name: \"Red Bull\",\n          },\n          {\n            price: {\n              text: \"99,000đ\",\n            },\n            photos: [\n              {\n                value: \"https://wjhjnr.csb.app/dr-thanh.jpg\",\n              },\n            ],\n            id: nanoid(),\n            name: \"Dr Thanh\",\n          },\n          {\n            price: {\n              text: \"99,000đ\",\n            },\n            photos: [\n              {\n                value: \"https://wjhjnr.csb.app/0-degree.jpg\",\n              },\n            ],\n            id: nanoid(),\n            name: \"0 degree\",\n          },\n          {\n            price: {\n              text: \"99,000đ\",\n            },\n            photos: [\n              {\n                value: \"https://wjhjnr.csb.app/c2.jpeg\",\n              },\n            ],\n            id: nanoid(),\n            name: \"C2\",\n          },\n          {\n            price: {\n              text: \"99,000đ\",\n            },\n            photos: [\n              {\n                value: \"https://wjhjnr.csb.app/revive.jpeg\",\n              },\n            ],\n            id: nanoid(),\n            name: \"Revive\",\n          },\n          {\n            price: {\n              text: \"99,000đ\",\n            },\n            photos: [\n              {\n                value: \"https://wjhjnr.csb.app/tea+-plus.png\",\n              },\n            ],\n            id: nanoid(),\n            name: \"TEA+ Plus\",\n          },\n          {\n            price: {\n              text: \"99,000đ\",\n            },\n            photos: [\n              {\n                value: \"https://wjhjnr.csb.app/247.jpg\",\n              },\n            ],\n            id: nanoid(),\n            name: \"247\",\n          },\n          {\n            price: {\n              text: \"99,000đ\",\n            },\n            photos: [\n              {\n                value: \"https://wjhjnr.csb.app/number-one.jpg\",\n              },\n            ],\n            id: nanoid(),\n            name: \"Number One\",\n          },\n        ],\n      },\n    ],\n  },\n};\n","import { Button, Form, Input, NavBar, Tabs, Toast } from 'antd-mobile'\nimport { Fragment, useCallback, useEffect, useState } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport {\n    addDocument,\n    getColRef,\n    getDocRef,\n    getDocument,\n    updateDocument,\n} from '../../firebase/service'\nimport useAuth from '../../hooks/useAuth'\nimport { MASTER_MOCK_DATA } from '../../mocks'\nimport { DocumentData, DocumentReference } from 'firebase/firestore'\nimport { Loading } from '../../global'\n\nconst initialValues = MASTER_MOCK_DATA.NEW_CATEGORY\n\nconst NewCategory = () => {\n    const navigate = useNavigate()\n    const { user } = useAuth()\n    const { categoryId } = useParams()\n    const isEditMode = Boolean(categoryId)\n    const [form] = Form.useForm()\n    const [categoryDocRefState, setCategoryDocRefState] =\n        useState<DocumentReference<DocumentData, DocumentData> | null>(null)\n\n    const onFinish = useCallback(\n        async (values: typeof initialValues) => {\n            if (user === null) return\n            try {\n                Loading.get().show()\n                const { categoryName } = values\n                const uid = user.uid\n                const categoryData = {\n                    categoryName,\n                    uid,\n                }\n\n                if (isEditMode) {\n                    if (categoryDocRefState === null) return\n                    await updateDocument(categoryDocRefState, categoryData)\n                } else {\n                    const categoryDocRef = getColRef('users', uid, 'categories')\n                    await addDocument(categoryDocRef, categoryData)\n                }\n\n                navigate(-1)\n                Toast.show({\n                    icon: 'success',\n                    content: isEditMode\n                        ? 'Category is updated'\n                        : 'Category is created',\n                })\n\n                return\n            } catch (error: any) {\n                Toast.show({\n                    icon: 'error',\n                    content: error.message,\n                })\n            } finally {\n                Loading.get().hide()\n            }\n        },\n        [user, isEditMode, categoryDocRefState]\n    )\n\n    const fetchCategoryById = useCallback(\n        async (categoryId: string) => {\n            if (user === null) return\n            const categoryDocRef = getDocRef(\n                'users',\n                user?.uid,\n                'categories',\n                categoryId\n            )\n            setCategoryDocRefState(categoryDocRef)\n            const dishDocData: any = await getDocument(categoryDocRef)\n            form.setFieldsValue(dishDocData)\n        },\n        [user, categoryId]\n    )\n\n    useEffect(() => {\n        if (categoryId === undefined) return\n        fetchCategoryById(categoryId)\n    }, [categoryId, fetchCategoryById])\n\n    return (\n        <Fragment>\n            <NavBar\n                className=\"sticky top-0 z-[100] bg-white\"\n                onBack={() => navigate(-1)}\n            >\n                {isEditMode ? 'EDIT CATEGORY' : 'NEW CATEGORY'}\n            </NavBar>\n            <Tabs>\n                <Tabs.Tab title={isEditMode ? 'Edit' : 'New'} key=\"new\">\n                    <Form\n                        form={form}\n                        initialValues={initialValues}\n                        layout=\"horizontal\"\n                        onFinish={onFinish}\n                        // footer={\n                        //   <Button\n                        //     block\n                        //     type=\"submit\"\n                        //     color=\"primary\"\n                        //     size=\"large\"\n                        //     disabled={\n                        //       !form.isFieldsTouched(true) ||\n                        //       form.getFieldsError().filter(({ errors }) => errors.length)\n                        //         .length > 0\n                        //     }\n                        //   >\n                        //     {isEditMode ? \"EDIT\" : \"CREATE\"}\n                        //   </Button>\n                        // }\n                    >\n                        <Form.Header>\n                            {isEditMode ? 'Edit Category' : 'New Category'}\n                        </Form.Header>\n                        <Form.Item\n                            name=\"categoryName\"\n                            label=\"Category Name\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Category Name is required',\n                                },\n                            ]}\n                            shouldUpdate\n                        >\n                            <Input autoComplete=\"none\" placeholder=\"chnirt\" />\n                        </Form.Item>\n\n                        <Form.Item shouldUpdate className=\"submit\">\n                            {() => (\n                                <Button\n                                    block\n                                    type=\"submit\"\n                                    color=\"primary\"\n                                    size=\"large\"\n                                    disabled={\n                                        !form.isFieldsTouched(true) ||\n                                        form\n                                            .getFieldsError()\n                                            .filter(\n                                                ({ errors }) => errors.length\n                                            ).length > 0\n                                    }\n                                >\n                                    {isEditMode ? 'EDIT' : 'CREATE'}\n                                </Button>\n                            )}\n                        </Form.Item>\n                    </Form>\n                </Tabs.Tab>\n                {/* <Tabs.Tab title=\"Templates\" key=\"templates\">\n          <Form\n            initialValues={{\n              template: [\"coffee\"],\n            }}\n            layout=\"horizontal\"\n            onFinish={onFinish}\n            footer={\n              <Button block type=\"submit\" color=\"primary\" size=\"large\">\n                CREATE\n              </Button>\n            }\n          >\n            <Form.Header>New Category</Form.Header>\n            <Form.Item\n              name=\"template\"\n              label=\"Template\"\n              rules={[{ required: true, message: \"Template is required\" }]}\n            >\n              <Selector\n                columns={3}\n                multiple\n                options={[\n                  { label: \"Coffee\", value: \"coffee\" },\n                  { label: \"Tea\", value: \"tea\" },\n                  { label: \"Juices\", value: \"juices\" },\n                  { label: \"Beer\", value: \"beer\" },\n                ]}\n              />\n            </Form.Item>\n          </Form>\n        </Tabs.Tab> */}\n            </Tabs>\n        </Fragment>\n    )\n}\n\nexport default NewCategory\n"],"names":["nanoid","size","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","MASTER_MOCK_DATA","LOGIN","email","IS_DEVELOP","password","REGISTER","fullName","username","confirmPassword","NEW_CATEGORY","categoryName","NEW_DISH","dishName","price","dishFiles","initialValues","navigate","useNavigate","user","useAuth","categoryId","useParams","isEditMode","Boolean","_Form$useForm","Form","useForm","form","_slicedToArray","_useState","useState","_useState2","categoryDocRefState","setCategoryDocRefState","onFinish","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","uid","categoryData","categoryDocRef","wrap","_context","prev","next","abrupt","Loading","get","show","updateDocument","getColRef","addDocument","Toast","icon","content","t0","message","hide","finish","stop","_x","apply","fetchCategoryById","_ref2","_callee2","dishDocData","_context2","getDocRef","getDocument","sent","setFieldsValue","_x2","useEffect","_jsxs","Fragment","children","_jsx","NavBar","className","onBack","Tabs","Tab","title","layout","Header","Item","name","label","rules","required","shouldUpdate","Input","autoComplete","placeholder","Button","block","type","color","disabled","isFieldsTouched","getFieldsError","filter","_ref3","errors"],"sourceRoot":""}